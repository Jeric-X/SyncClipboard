<?xml version="1.0" encoding="utf-8" ?>
<Page x:Class="SyncClipboard.WinUI3.Views.SyncSettingPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:ui="using:CommunityToolkit.WinUI.Controls"
      xmlns:i18n="using:SyncClipboard.Core.I18n"
      xmlns:vm="using:SyncClipboard.Core.ViewModels"
      xmlns:vc="using:SyncClipboard.WinUI3.ValueConverters"
      xmlns:local="using:SyncClipboard.WinUI3.Views"
      MinWidth="550"
      d:DataContext="{d:DesignInstance vm:SyncSettingViewModel}"
      BorderBrush="Transparent"
      mc:Ignorable="d">
    <Page.Resources>
        <vc:BoolToPasswordIconConverter x:Key="BoolToPasswordIconConverter" />
        <!--<Thickness x:Key="SettingsCardPadding">16,16,60,16</Thickness>
        <Thickness x:Key="SettingsExpanderItemPadding">58,8,60,8</Thickness>
        <Thickness x:Key="ClickableSettingsExpanderItemPadding">58,0,32,0</Thickness>
        <Thickness x:Key="SettingsExpanderItemBorderThickness">0,0,0,0</Thickness>-->
        <Style TargetType="Button" BasedOn="{StaticResource DateTimePickerFlyoutButtonStyle}">
            <Setter Property="Height" Value="32" />
            <Setter Property="Width" Value="32" />
            <Setter Property="Padding" Value="0,0,0,0" />
        </Style>
        <Style TargetType="ToggleButton" BasedOn="{StaticResource DefaultToggleButtonStyle}">
            <Setter Property="Height" Value="32" />
            <Setter Property="Width" Value="32" />
            <Setter Property="Padding" Value="0,0,0,0" />
            <Setter Property="BorderThickness" Value="0,0,0,0" />
            <Setter Property="Background" Value="Transparent" />
        </Style>
    </Page.Resources>
    <StackPanel Spacing="10">
        <ui:SettingsExpander Header="{x:Bind i18n:Strings.ClipboardSyncing}" IsExpanded="True">
            <ui:SettingsExpander.HeaderIcon>
                <FontIcon Glyph="&#xE117;" />
            </ui:SettingsExpander.HeaderIcon>
            <ToggleSwitch OnContent="{x:Bind i18n:Strings.On}" OffContent="{x:Bind i18n:Strings.Off}" IsOn="{x:Bind _viewModel.SyncEnable, Mode=TwoWay}" />
            <ui:SettingsExpander.Items>
                <ui:SettingsCard Description="{x:Bind i18n:Strings.UseBuiltInServerDescription}" Header="{x:Bind i18n:Strings.UseSelfHostServer}">
                    <ToggleSwitch OnContent="{x:Bind i18n:Strings.On}" OffContent="{x:Bind i18n:Strings.Off}" IsOn="{x:Bind _viewModel.UseLocalServer, Mode=TwoWay}" />
                </ui:SettingsCard>
                <ui:SettingsCard Visibility="{x:Bind vc:ConvertMethod.BoolToVisibility(_viewModel.UseManulServer), Mode=OneWay}" Description="{x:Bind _viewModel.ClientConfigDescription, Mode=OneWay}">
                    <StackPanel Orientation="Horizontal" Spacing="5">
                        <ToggleButton IsChecked="{x:Bind _viewModel.ShowClientPassword, Mode=TwoWay}">
                            <FontIcon Glyph="{x:Bind _viewModel.ShowClientPassword, Mode=OneWay, Converter={StaticResource BoolToPasswordIconConverter}}" />
                        </ToggleButton>
                        <Button Command="{x:Bind SetSyncCommand}">
                            <FontIcon Glyph="&#xE115;" />
                        </Button>
                    </StackPanel>
                </ui:SettingsCard>
                <ui:SettingsCard Header="{x:Bind i18n:Strings.TrustInsecureCertificate}">
                    <ToggleSwitch OnContent="{x:Bind i18n:Strings.On}" OffContent="{x:Bind i18n:Strings.Off}" IsOn="{x:Bind _viewModel.TrustInsecureCertificate, Mode=TwoWay}" />
                </ui:SettingsCard>
                <ui:SettingsCard VerticalContentAlignment="Stretch" Visibility="{x:Bind vc:ConvertMethod.BoolToVisibility(_viewModel.UseManulServer), Mode=OneWay}" ContentAlignment="Vertical">
                    <!-- 第三方登录数量大于等于2时，不再使用Descrition，直接在Content中使用Stackpanel包装多个HyperlinkButton，并使用以下style
                        <ui:SettingsCard.Resources>
                        <Style BasedOn="{StaticResource DefaultHyperlinkButtonStyle}" TargetType="HyperlinkButton">
                            <Style.Setters>
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="Padding" Value="0,0,0,-1" />
                                <Setter Property="FontWeight" Value="SemiBold" />
                            </Style.Setters>
                        </Style>
                    </ui:SettingsCard.Resources>-->
                    <ui:SettingsCard.Description>
                        <HyperlinkButton Content="{x:Bind i18n:Strings.UseNextcloud}" Command="{x:Bind _viewModel.LoginWithNextcloudCommand}" />
                    </ui:SettingsCard.Description>
                </ui:SettingsCard>
                <ui:SettingsCard Header="{x:Bind i18n:Strings.QueryInterval}">
                    <NumberBox Minimum="0" Maximum="100000" Value="{x:Bind _viewModel.IntervalTime, Mode=TwoWay}" />
                </ui:SettingsCard>
                <ui:SettingsCard Header="{x:Bind i18n:Strings.RetryTimes}">
                    <NumberBox Minimum="0" Maximum="100000" Value="{x:Bind _viewModel.RetryTimes, Mode=TwoWay}" />
                </ui:SettingsCard>
                <ui:SettingsCard Header="{x:Bind i18n:Strings.TimeoutPeriod}">
                    <NumberBox Minimum="0" Maximum="100000" Value="{x:Bind _viewModel.TimeOut, Mode=TwoWay}" />
                </ui:SettingsCard>
                <ui:SettingsCard Header="{x:Bind i18n:Strings.DeleteServerTemporaryFileAutoly}">
                    <ToggleSwitch OnContent="{x:Bind i18n:Strings.On}" OffContent="{x:Bind i18n:Strings.Off}" IsOn="{x:Bind _viewModel.AutoDeleleServerFile, Mode=TwoWay}" />
                </ui:SettingsCard>
                <ui:SettingsCard Header="{x:Bind i18n:Strings.SendNotificationAfterManuallyUpload}">
                    <ToggleSwitch OnContent="{x:Bind i18n:Strings.On}" OffContent="{x:Bind i18n:Strings.Off}" IsOn="{x:Bind _viewModel.NotifyOnManualUpload, Mode=TwoWay}" />
                </ui:SettingsCard>
                <ui:SettingsCard Header="{x:Bind i18n:Strings.SendNotificationAfterUpdateLocalClipboard}">
                    <ToggleSwitch OnContent="{x:Bind i18n:Strings.On}" OffContent="{x:Bind i18n:Strings.Off}" IsOn="{x:Bind _viewModel.NotifyOnDownloaded, Mode=TwoWay}" />
                </ui:SettingsCard>
                <ui:SettingsCard Header="{x:Bind i18n:Strings.SyncContentControl}" IsClickEnabled="True" Command="{x:Bind _viewModel.OpenSyncContentControlPageCommand}" />
            </ui:SettingsExpander.Items>
        </ui:SettingsExpander>
        <local:ServerSettingDialog x:Name="_SyncSettingDialog" PrimaryButtonClick="SyncSettingDialog_OkClick" TextBoxName="{x:Bind i18n:Strings.Address}" />
    </StackPanel>
</Page>