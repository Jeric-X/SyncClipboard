<?xml version="1.0" encoding="utf-8" ?>
<Window x:Class="SyncClipboard.WinUI3.Views.HistoryWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="using:SyncClipboard.WinUI3.Views"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vc="using:SyncClipboard.WinUI3.ValueConverters"
        xmlns:i18n="using:SyncClipboard.Core.I18n"
        xmlns:m="using:SyncClipboard.Core.Models"
        xmlns:vm="using:SyncClipboard.Core.ViewModels"
        xmlns:vms="using:SyncClipboard.Core.ViewModels.Sub"
        x:Name="_HistoryWindow"
        Title="HistoryWindow"
        mc:Ignorable="d">
    <Window.SystemBackdrop>
        <DesktopAcrylicBackdrop />
    </Window.SystemBackdrop>
    <Grid x:Name="_HistoryWindowGrid"
          KeyDown="Grid_KeyDown"
          KeyboardAcceleratorPlacementMode="Hidden"
          RowDefinitions="Auto, Auto, *">
        <Grid.Resources>
            <Style TargetType="Button" BasedOn="{StaticResource DateTimePickerFlyoutButtonStyle}">
                <Setter Property="Height" Value="28" />
                <Setter Property="Width" Value="28" />
                <Setter Property="Padding" Value="0,0,0,0" />
                <Setter Property="FontSize" Value="12" />
            </Style>
            <Style TargetType="FontIcon">
                <Setter Property="FontSize" Value="12" />
            </Style>
            <DataTemplate x:Key="normalTemplate" x:DataType="vms:HistoryRecordVM">
                <TextBlock Text="{x:Bind vc:ConvertMethod.LimitLines(Text)}" />
            </DataTemplate>
            <DataTemplate x:Key="imageTemplate" x:DataType="vms:HistoryRecordVM">
                <StackPanel Orientation="Vertical" Spacing="5">
                    <Image MaxHeight="200"
                           HorizontalAlignment="Left"
                           Stretch="None"
                           ImageOpened="Image_ImageOpened"
                           PointerPressed="Image_PointerPressed"
                           Visibility="Collapsed">
                        <Image.Source>
                            <BitmapImage UriSource="{x:Bind FilePath[0]}" />
                        </Image.Source>
                    </Image>
                    <TextBlock HorizontalAlignment="Left" Text="{x:Bind vc:ConvertMethod.LimitLines(Text)}" />
                </StackPanel>
            </DataTemplate>
            <local:ClipboardViewerTemplateSelector x:Key="clipboardTemplateSelector" Normal="{StaticResource normalTemplate}" Image="{StaticResource imageTemplate}" />
        </Grid.Resources>
        <Grid x:Name="_TitleBar" Grid.Row="0">
            <SelectorBar x:Name="_FilterSelectorBar"
                         Margin="8,0,8,0"
                         Padding="0,-4,0,0"
                         HorizontalAlignment="Center"
                         IsTabStop="False"
                         PointerPressed="FilterSelectorBar_PointerPressed"
                         AllowFocusOnInteraction="False"
                         SelectionChanged="SelectorBar_SelectionChanged" />
            <StackPanel x:Name="_ButtonArea"
                        Margin="0,2,8,0"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal"
                        Spacing="4">
                <ToggleButton Style="{StaticResource IconToggleButtonStyle}" ToolTipService.ToolTip="{x:Bind i18n:Strings.WindowTopmost}" IsChecked="{x:Bind _viewModel.IsTopmost, Mode=TwoWay}">
                    <FontIcon Glyph="&#xE840;" />
                </ToggleButton>
                <Button Width="24" Height="24" VerticalAlignment="Center">
                    <FontIcon Glyph="&#xE10C;" />
                    <Button.Flyout>
                        <MenuFlyout Placement="Bottom">
                            <ToggleMenuFlyoutItem Text="{x:Bind i18n:Strings.ScrollToTopOnReopen}" IsChecked="{x:Bind _viewModel.ScrollToTopOnReopen, Mode=TwoWay}" />
                            <ToggleMenuFlyoutItem Text="{x:Bind i18n:Strings.CloseHistoryWindowWhenLostFocus}" IsChecked="{x:Bind _viewModel.CloseWhenLostFocus, Mode=TwoWay}" />
                            <ToggleMenuFlyoutItem Text="显示同步状态" IsChecked="{x:Bind _viewModel.ShowSyncState, Mode=TwoWay}" />
                            <ToggleMenuFlyoutItem Text="仅显示本地" IsChecked="{x:Bind _viewModel.OnlyShowLocal, Mode=TwoWay}" />
                        </MenuFlyout>
                    </Button.Flyout>
                </Button>
                <Button Width="24"
                        Height="24"
                        VerticalAlignment="Center"
                        Command="{x:Bind _viewModel.CloseCommand}">
                    <FontIcon Glyph="&#xE711;" />
                </Button>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1" Margin="20,8,8,8" ColumnDefinitions="*, Auto">
            <TextBox x:Name="_SearchTextBox"
                     Grid.Column="0"
                     VerticalContentAlignment="Center"
                     Text="{x:Bind _viewModel.SearchText, Mode=TwoWay}"
                     PlaceholderText="{x:Bind i18n:Strings.HistorySearchPlaceholder}"
                     KeyboardAcceleratorPlacementMode="Hidden"
                     TextChanged="SearchTextBox_TextChanged">
                <TextBox.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Home" Modifiers="Control" Invoked="CtrlHome_Invoked" />
                    <KeyboardAccelerator Key="End" Modifiers="Control" Invoked="CtrlEnd_Invoked" />
                </TextBox.KeyboardAccelerators>
            </TextBox>
            <StackPanel Grid.Column="1" VerticalAlignment="Center" Orientation="Horizontal">
                <Button Width="32"
                        Height="32"
                        Command="{x:Bind _viewModel.RefreshCommand}"
                        ToolTipService.ToolTip="刷新">
                    <Grid>
                        <FontIcon Glyph="&#xE72C;" Visibility="{x:Bind vc:ConvertMethod.BoolToVisibilityNegate(_viewModel.IsLoadingMore), Mode=OneWay}" />
                        <ProgressRing Width="16"
                                      Height="16"
                                      IsActive="{x:Bind _viewModel.IsLoadingMore, Mode=OneWay}"
                                      Visibility="{x:Bind vc:ConvertMethod.BoolToVisibility(_viewModel.IsLoadingMore), Mode=OneWay}" />
                    </Grid>
                </Button>
                <Button Width="32"
                        Height="32"
                        Command="{x:Bind _viewModel.ScrollToTopCommand}"
                        ToolTipService.ToolTip="{x:Bind i18n:Strings.ScrollToTop}">
                    <FontIcon Glyph="&#xE898;" />
                </Button>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="2">
            <Image x:Name="_InvisualableImage"
                   MaxHeight="201"
                   Stretch="None"
                   IsHitTestVisible="False"
                   Opacity="0" />
        </Grid>
        <ListView x:Name="_ListView"
                  Grid.Row="2"
                  IsTabStop="False"
                  ItemsSource="{x:Bind _viewModel.HistoryItems, Mode=OneWay}"
                  SelectedIndex="{x:Bind _viewModel.SelectedIndex, Mode=TwoWay}"
                  SelectionMode="Single">
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="vms:HistoryRecordVM">
                    <ListViewItem IsTabStop="False">
                        <ListViewItem.ContextFlyout>
                            <MenuFlyout Opening="ItemContextFlyout_Opening" />
                        </ListViewItem.ContextFlyout>
                        <Grid MinHeight="10"
                              PointerPressed="Grid_PointerPressed"
                              ColumnDefinitions="Auto, *, Auto, Auto"
                              Background="Transparent"
                              Opacity="{x:Bind vc:ConvertMethod.SyncStateToOpacity(SyncState)}">
                            <Border Grid.Column="0" Height="40" VerticalAlignment="Top">
                                <FontIcon VerticalAlignment="Center" Glyph="{x:Bind vc:ConvertMethod.ProfileTypeToFontIcon(Type)}" FontSize="16" />
                            </Border>
                            <ContentControl Grid.Column="1"
                                            Padding="8,8,0,8"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            FontSize="12"
                                            Content="{x:Bind}"
                                            ContentTemplateSelector="{StaticResource clipboardTemplateSelector}" />
                            <StackPanel Grid.Column="2" Margin="5,0,0,0" Orientation="Horizontal">
                                <Button Click="CopyButtonClicked" IsTabStop="False">
                                    <FontIcon Glyph="&#xE8C8;" />
                                </Button>
                                <Button Click="PasteButtonClicked" IsTabStop="False">
                                    <FontIcon Glyph="&#xE77F;" FontSize="12" />
                                </Button>
                                <Button Click="StarButtonClicked" IsTabStop="False">
                                    <FontIcon Glyph="{x:Bind vc:ConvertMethod.ToStarIcon(Stared), Mode=OneWay}" FontSize="12" />
                                </Button>
                                <Button Click="DeleteButtonClicked" IsTabStop="False">
                                    <FontIcon Glyph="&#xE74D;" FontSize="12" />
                                </Button>
                            </StackPanel>
                            <Border Grid.Column="3"
                                    Width="2"
                                    Margin="4,0,4,0"
                                    Background="{x:Bind vc:ConvertMethod.SyncStateToBrush(SyncState)}"
                                    Loaded="StatusBorderLoaded"
                                    ToolTipService.ToolTip="{x:Bind vc:ConvertMethod.SyncStateToText(SyncState)}" />
                        </Grid>
                    </ListViewItem>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <InfoBar x:Name="_InfoBar"
                 Grid.Row="2"
                 Width="400"
                 Margin="0,0,0,100"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Bottom"
                 IsOpen="{x:Bind _viewModel.ShowInfoBar, Mode=OneWay}"
                 Message="{x:Bind _viewModel.InfoBarMessage, Mode=OneWay}"
                 Severity="Warning"
                 IsClosable="True" />
    </Grid>
</Window>
